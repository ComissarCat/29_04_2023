//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _29_04_2023
{
    using System.Collections.Generic;
    using System.Linq;

    public partial class books
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public books()
        {
            this.authors_books = new HashSet<authors_books>();
            this.taken_books = new HashSet<taken_books>();
        }
    
        public int id { get; set; }
        public string name { get; set; }
        public bool available { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<authors_books> authors_books { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<taken_books> taken_books { get; set; }
        public string get_authors()
        {
            string authors = "";
            foreach (var author_id in (from ab in libraryEntities.get_instance().authors_books where id == ab.id_book select ab.id_author).ToList())
                authors += $"{((from a in libraryEntities.get_instance().authors where author_id == a.id select a.name).FirstOrDefault())};\n";
            return authors;
        }
        public List<authors> get_list_of_authors()
        {
            List<authors> authors = new List<authors>();
            foreach (var author_id in (from ab in libraryEntities.get_instance().authors_books where id == ab.id_book select ab.id_author).ToList())
                authors.Add(((from a in libraryEntities.get_instance().authors where author_id == a.id select a).FirstOrDefault()));
            return authors;
        }
    }
}
